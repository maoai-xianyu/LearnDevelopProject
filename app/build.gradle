apply plugin: 'com.android.application'
apply plugin: 'packer'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants
//在构建工程时，执行编织
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}


android {
    dataBinding {
        enabled = true
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion '29.0.3'

    // jks打包签名用的
    signingConfigs {
        config {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file('../mvpproject.jks')
            storePassword KEYSTORE_PASSWORD
            v2SigningEnabled false
        }
    }

    defaultConfig {
        applicationId "com.mao.cn.learnDevelopProject"
        minSdkVersion 21
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode VERSION_CODE as Integer
        versionName VERSION_NAME as String
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi"
        }

        //添加如下配置就OK了
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            buildConfigField "boolean", "API_DEBUG", "false"
            buildConfigField "boolean", "API_PRINT", "false"
            buildConfigField("boolean", "LOG_HTTP_CALLS", "false")
            signingConfig signingConfigs.config
            buildConfigField "String", "ASSETS_URL", "\"http://assets.mao.cn/\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // 是否继续混淆
            minifyEnabled false
            buildConfigField "boolean", "API_DEBUG", "true"
            buildConfigField "boolean", "API_PRINT", "true"
            buildConfigField("boolean", "LOG_HTTP_CALLS", "true")
            buildConfigField "String", "ASSETS_URL", "\"http://assets.mao.cn/local/\""

            signingConfig signingConfigs.config
            // 混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        betatest {
            zipAlignEnabled true
            minifyEnabled true
            buildConfigField "boolean", "API_DEBUG", "true"
            buildConfigField "boolean", "API_PRINT", "true"
            buildConfigField("boolean", "LOG_HTTP_CALLS", "true")
            buildConfigField "String", "ASSETS_URL", "\"http://assets.mao.cn/local/\""
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/gradle/incremental.annotation.processors'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.jakewharton:butterknife:10.2.1'
    implementation 'com.jakewharton:butterknife-compiler:10.2.1'

    // apt 很重要
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.mcxiaoke.gradle:packer-helper:1.0.9'
    implementation 'com.google.dagger:dagger:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    implementation 'com.trello:rxlifecycle:1.0'
    implementation 'com.trello:rxlifecycle-components:1.0'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.facebook.fresco:fresco:0.14.1'
    implementation 'com.mcxiaoke.gradle:packer-helper:1.0.9'
    implementation 'com.squareup.okio:okio:1.14.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation('com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0') {
        exclude module: 'com.android.support:recyclerview-v7'
    }
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.tsy:myokhttp:1.1.4'
    // 调用第三方封装的写法
    /* implementation('com.tsy:myokhttp:1.1.3') {
        exclude module: 'com.android.support:appcompat-v7'
        exclude module: 'com.squareup.okhttp3:okhttp'
        exclude module: 'com.squareup.okhttp3:logging-interceptor'
        exclude module: 'com.google.code.gson:gson'
        exclude module: 'com.squareup.okio:okio'
    }*/
    implementation 'com.beetstra.jutf7:jutf7:1.0.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'com.facebook.rebound:rebound:0.3.8'
    implementation files('libs/YoudaoBase.jar')
    implementation files('libs/YoudaoCnDictOffline.jar')
    implementation files('libs/YoudaoLineOffline.jar')
    implementation files('libs/YoudaoTranslateOnline.jar')
    implementation files('libs/YoudaoWordOffline.jar')
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    // https://mvnrepository.com/artifact/com.nineoldandroids/library
    implementation files('libs/library-2.4.0.jar')
    // navigation
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.1.0'
    // navigation
    implementation 'me.majiajie:pager-bottom-tab-strip:2.3.0'

    implementation 'com.hwangjr.rxbus:rxbus:1.0.6'
    // 高斯模糊
    implementation 'com.dasu.image:blur:0.0.6'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android:gpuimage:2.0.3'
    implementation 'com.jude:easyrecyclerview:4.4.2'
    // 状态栏沉浸：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'
    //现类似微博内容，@用户，链接高亮，@用户和链接可点击跳转，可展开和收回的TextView
    implementation 'com.github.MZCretin:ExpandableTextView:v1.5.2'

    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    // Room components
    implementation 'androidx.room:room-runtime:2.2.5'
    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    androidTestImplementation 'androidx.room:room-testing:2.2.5'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'
    implementation 'org.aspectj:aspectjrt:1.9.5'
    implementation 'com.github.markzhai:blockcanary-android:1.5.0'
    annotationProcessor project(path: ':define-butterknife-compiler')
    implementation project(path: ':define-butterknife-annontations')
    implementation project(path: ':define-butterknife')


}
